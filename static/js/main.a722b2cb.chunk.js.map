{"version":3,"sources":["ducks/books/types.ts","Books.tsx","Home.tsx","PageNotFound.tsx","Detail.tsx","SearchAppBar.tsx","utils/wrapPromise.ts","ducks/books/actions.ts","App.tsx","ducks/books/index.ts","ducks/books/reducers.ts","serviceWorker.ts","index.tsx"],"names":["actionTypes","useStylesBootstrap","makeStyles","theme","arrow","color","palette","common","black","tooltip","backgroundColor","BootstrapTooltip","props","Tooltip","classes","withStyles","createStyles","row","display","flexWrap","poster","height","width","book","borderRadius","border","marginRight","padding","books","className","map","index","to","id","key","title","alt","src","Home","wrapedPromise","useSelector","state","wrapPromise","read","HomeIcon","SvgIcon","d","root","justifyContent","alignItems","fontSize","textTransform","flexDirection","fontWeight","textDecoration","position","top","style","marginTop","header","pipe","content","bookId","useParams","find","subTitle","undefined","ranking","Rating","name","value","precision","readOnly","size","publicationDate","Date","getFullYear","length","publisher","overview","whiteSpace","flexGrow","toolbar","minHeight","breakpoints","down","up","fade","white","textfield","selectedMovie","useRef","history","useHistory","AppBar","Toolbar","Typography","variant","noWrap","onSubmit","e","preventDefault","current","push","Autocomplete","options","getOptionLabel","option","onChange","val","renderInput","params","TextField","label","promise","result","status","suspender","then","r","isFetchSuspenderAction","action","type","FETCH_SUSPENDER","payload","Promise","resolve","setTimeout","fetch","json","margin","useDispatch","dispatch","booksActions","fallback","SearchAppBar","path","exact","render","component","PageNotFound","booksReducer","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","ducks","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a722b2cb.chunk.js","sourcesContent":["export enum actionTypes {\n  FETCH_SUSPENDER = \"@BOOKS/fetchSuspender\",\n}\n\nexport interface IBook {\n  id: string;\n  ranking?: number;\n  authors?: string[];\n  length?: number;\n  publisher: string;\n  publicationDate: string;\n  asin: string;\n  isbn10: string;\n  isbn13: string;\n  title?: string;\n  subTitle?: string;\n  poster?: string;\n  overview?: string;\n}\n\nexport interface IAppStore {\n  wrapPromise?: any;\n}\n\ninterface IAction {\n  type: actionTypes;\n}\n\ninterface IActionFetchSuspender extends IAction {\n  payload: any;\n}\n\n// TYPE GUARDS\nexport const isFetchSuspenderAction = (\n  action: IAction\n): action is IActionFetchSuspender =>\n  action?.type === actionTypes.FETCH_SUSPENDER;\n","import React, { FunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { IBook } from \"./ducks/books/types\";\n\ninterface IBooksProps {\n  classes: {\n    row: string;\n    poster: string;\n    book: string;\n  };\n  books: IBook[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    row: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    poster: {\n      height: \"180px\",\n      width: \"auto\",\n    },\n    book: {\n      borderRadius: \"0.1875rem\",\n      display: \"flex\",\n      border: \"3px solid transparent\",\n      \"&:not(:last-child)\": {\n        marginRight: \"14px\",\n      },\n      \"&:hover\": {\n        border: \"2px solid #ff51a1\",\n        padding: \"1px\",\n      },\n    },\n  });\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n  arrow: {\n    color: theme.palette.common.black,\n  },\n  tooltip: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nconst BootstrapTooltip = (props: any) => (\n  <Tooltip arrow classes={useStylesBootstrap()} {...props} />\n);\n\nconst Books: FunctionComponent<IBooksProps> = ({ books, classes }) => {\n  return (\n    <div className={classes.row}>\n      {books.map((book, index) => {\n        return (\n          <Link\n            className={classes.book}\n            to={book?.id ? `/book/${book.id}` : \"\"}\n            key={book?.id || index}\n          >\n            <BootstrapTooltip title={book?.title || \"\"}>\n              {book?.poster && (\n                <img\n                  className={classes.poster}\n                  alt={book?.title}\n                  src={book.poster}\n                />\n              )}\n            </BootstrapTooltip>\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Books);\n","import React, { FunctionComponent } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Books from \"./Books\";\nimport { IReduxStore } from \"./ducks/reduxStoreType\";\n\nconst Home: FunctionComponent = () => {\n  const wrapedPromise = useSelector(\n    (state: IReduxStore) => state.books.wrapPromise\n  );\n\n  return <Books books={wrapedPromise?.read?.() || []} />;\n};\n\nexport default Home;\n","import React, { FunctionComponent } from \"react\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport { Link } from \"react-router-dom\";\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\n\ninterface IPageNotFoundProps {\n  classes: {\n    root: string;\n  };\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"calc(100vh - 110px)\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontSize: \"25px\",\n      textTransform: \"uppercase\",\n      flexDirection: \"column\",\n      fontWeight: \"bold\",\n      \"& a\": {\n        textTransform: \"none\",\n        textDecoration: \"none\",\n        color: \"black\",\n        \"& svg\": {\n          position: \"relative\",\n          top: \"7px\",\n        },\n      },\n    },\n  });\n\nconst HomeIcon = (props: any) => (\n  <SvgIcon {...props}>\n    <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n  </SvgIcon>\n);\n\nconst PageNotFound: FunctionComponent<IPageNotFoundProps> = ({ classes }) => (\n  <div className={classes.root}>\n    <div>page not found</div>\n    <div>\n      <Link to=\"/\">\n        Go back <HomeIcon style={{ fontSize: 40 }} />\n      </Link>\n    </div>\n  </div>\n);\n\nexport default withStyles(styles)(PageNotFound);\n","import React, { FunctionComponent } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport PageNotFound from \"./PageNotFound\";\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\nimport { IBook } from \"./ducks/books/types\";\nimport { IReduxStore } from \"./ducks/reduxStoreType\";\n\ninterface IDetailProps {\n  classes: {\n    root: string;\n    header: string;\n    pipe: string;\n  };\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      marginTop: \"20px\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    header: {\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      justifyContent: \"space-between\",\n    },\n    pipe: {\n      \"&:not(:last-child):after\": {\n        content: \"|\",\n        padding: \"5px\",\n      },\n    },\n  });\n\nconst Detail: FunctionComponent<IDetailProps> = ({ classes }) => {\n  const { bookId } = useParams();\n\n  const wrapedPromise = useSelector(\n    (state: IReduxStore) => state.books.wrapPromise\n  );\n  const books = wrapedPromise?.read?.();\n\n  const book: IBook | undefined = books?.find?.(\n    (book: IBook) => book?.id === bookId\n  );\n\n  return book ? (\n    <article className={classes.root}>\n      <section>\n        {book?.poster && <img alt={book?.title} src={book.poster} />}\n      </section>\n      <div>\n        <header className={classes.header}>\n          <h1>{book.title}</h1>\n          <h3>{book.subTitle}</h3>\n          {book?.ranking !== undefined && (\n            <Rating\n              name=\"half-rating-read\"\n              value={book.ranking}\n              precision={0.1}\n              readOnly\n              size=\"large\"\n            />\n          )}\n        </header>\n        <section>\n          {book?.publicationDate && (\n            <span className={classes.pipe}>\n              {new Date(book.publicationDate)?.getFullYear?.()}\n            </span>\n          )}\n          {book?.length && <span className={classes.pipe}>{book.length}</span>}\n          {book?.publisher && (\n            <span className={classes.pipe}>{book.publisher}</span>\n          )}\n        </section>\n        {book?.overview && (\n          <section>\n            Overview:\n            <div style={{ whiteSpace: \"pre-line\" }}>{book.overview}</div>\n          </section>\n        )}\n      </div>\n    </article>\n  ) : (\n    <PageNotFound />\n  );\n};\n\nexport default withStyles(styles)(Detail);\n","import React, { FunctionComponent, useRef, FormEvent } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  createStyles,\n  fade,\n  Theme,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { IBook } from \"./ducks/books/types\";\nimport { IReduxStore } from \"./ducks/reduxStoreType\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    toolbar: {\n      backgroundColor: \"#FF51A1\",\n      minHeight: 80,\n      [theme.breakpoints.down(\"sm\")]: {\n        display: \"flex\",\n        flexDirection: \"column\",\n      },\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"flex\",\n        flexDirection: \"row\",\n      },\n    },\n    title: {\n      flexGrow: 1,\n      \"& > a\": {\n        color: fade(theme.palette.common.white, 1),\n        textDecoration: \"none\",\n      },\n    },\n    textfield: {\n      \"& > *\": {\n        color: fade(theme.palette.common.white, 1),\n      },\n    },\n  });\n\ninterface SearchAppBarProps {\n  classes: {\n    root: string;\n    toolbar: string;\n    title: string;\n    textfield: string;\n  };\n}\n\nconst SearchAppBarComponent: FunctionComponent<SearchAppBarProps> = ({\n  classes,\n}) => {\n  const wrapedPromise = useSelector(\n    (state: IReduxStore) => state.books.wrapPromise\n  );\n  const books = wrapedPromise?.read?.();\n\n  const selectedMovie = useRef<IBook | null>(null);\n  const history = useHistory();\n\n  const onSubmitHandle = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (selectedMovie?.current?.id) {\n      history.push(`/movie/${selectedMovie.current.id}`);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar>\n        <Toolbar className={classes.toolbar}>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            <Link to=\"/\">Home</Link>\n          </Typography>\n\n          <form onSubmit={onSubmitHandle}>\n            <Autocomplete\n              id=\"combo-box-movies\"\n              options={books}\n              getOptionLabel={(option: IBook) => option?.title || \"\"}\n              style={{ width: 300 }}\n              onChange={(e, val) => {\n                selectedMovie.current = val;\n              }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Search movie\"\n                  variant=\"outlined\"\n                  className={classes.textfield}\n                />\n              )}\n            />\n          </form>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SearchAppBarComponent);\n","// Suspense integrations like Relay implement\n// a contract like this to integrate with React.\n// Real implementations can be significantly more complex.\n// Don't copy-paste this into your project!\nconst wrapPromise = <T>(promise: Promise<T>) => {\n  let status = \"pending\";\n  let result: T;\n  let suspender = promise.then(\n    (r) => {\n      status = \"success\";\n      result = r;\n    },\n    (e) => {\n      status = \"error\";\n      result = e;\n    }\n  );\n\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      } else if (status === \"success\") {\n        return result;\n      }\n    },\n  };\n};\n\nexport default wrapPromise;\n","import { actionTypes, IBook } from \"./types\";\nimport { IWrapedPromise } from \"../reduxStoreType\";\n\nconst makeFetchSuspender = (\n  wrapPromise: (p: Promise<any>) => IWrapedPromise<IBook>\n) => ({\n  type: actionTypes.FETCH_SUSPENDER,\n  payload: wrapPromise(\n    new Promise((resolve) =>\n      setTimeout(\n        () =>\n          resolve(\n            fetch(\n              \"https://sakai-san.github.io/sharedatadifferentroutes/books.json\"\n            ).then((r) => r.json())\n          ),\n        0\n      )\n    )\n  ),\n});\n\nexport default {\n  makeFetchSuspender,\n};\n","import React, { Suspense, FunctionComponent } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\nimport Home from \"./Home\";\nimport Detail from \"./Detail\";\nimport PageNotFound from \"./PageNotFound\";\nimport SearchAppBar from \"./SearchAppBar\";\nimport { wrapPromise } from \"./utils\";\nimport booksActions from \"./ducks/books/actions\";\n\ninterface IAppProps {\n  classes: {\n    root: string;\n  };\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"90%\",\n      margin: \"0 auto\",\n      marginTop: \"110px\",\n    },\n  });\n\nconst App: FunctionComponent<IAppProps> = ({ classes }) => {\n  const dispatch = useDispatch();\n\n  dispatch(booksActions.makeFetchSuspender(wrapPromise));\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <Suspense fallback={\"\"}>\n          <SearchAppBar />\n        </Suspense>\n\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Suspense fallback={<h1>Loading books...</h1>}>\n                <Home />\n              </Suspense>\n            )}\n          />\n          <Route\n            path=\"/book/:bookId\"\n            render={() => (\n              <Suspense fallback={<h1>Loading book...</h1>}>\n                <Detail />\n              </Suspense>\n            )}\n          />\n          <Route component={PageNotFound} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default withStyles(styles)(App);\n","import booksReducer from \"./reducers\";\nexport { default as booksActions } from \"./actions\";\nexport default booksReducer;\n","import { Reducer } from \"redux\";\nimport { IAppStore, isFetchSuspenderAction } from \"./types\";\nimport actions from \"./actions\";\n\nconst reducer: Reducer<\n  IAppStore,\n  ReturnType<typeof actions.makeFetchSuspender>\n> = (\n  state = {\n    wrapPromise: null,\n  },\n  action\n) => {\n  if (isFetchSuspenderAction(action)) {\n    return {\n      ...state,\n      wrapPromise: action.payload,\n    };\n  } else {\n    return state;\n  }\n};\n\nexport default reducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport * as ducks from \"./ducks/index\";\nimport { compose, createStore, combineReducers } from \"redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.css\";\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(combineReducers(ducks), composeEnhancers());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}