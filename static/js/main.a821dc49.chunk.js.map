{"version":3,"sources":["ducks/useBooks/types.ts","Books.tsx","Home.tsx","PageNotFound.tsx","Detail.tsx","utils/wrapPromise.ts","ducks/useBooks/actions.ts","ducks/useBooks/operations.ts","ducks/useBooks/index.ts","ducks/useBooks/reducers.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["actionTypes","useStylesBootstrap","makeStyles","theme","arrow","color","palette","common","black","tooltip","backgroundColor","BootstrapTooltip","props","Tooltip","classes","withStyles","createStyles","row","display","flexWrap","poster","height","width","books","className","map","book","index","to","asin","isbn13","isbn10","key","title","alt","src","Home","wrapedPromise","useSelector","state","useBooks","wrapPromise","resolved","read","PageNotFound","Detail","bookId","useParams","find","subTitle","undefined","ranking","Rating","name","value","precision","readOnly","size","publicationDate","Date","getFullYear","length","publisher","overview","style","whiteSpace","promise","result","status","suspender","then","r","e","isPromiseAction","action","type","FETCH_PROMISE","isFetchingAction","FETCHING_BOOKS","isFetchAction","FETCH_BOOKS","payload","dispatch","actions","Promise","resolve","setTimeout","fetch","json","useBooksReducer","isFetching","root","margin","marginTtop","useDispatch","useBooksOperations","path","exact","render","fallback","component","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","ducks","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a821dc49.chunk.js","sourcesContent":["export enum actionTypes {\n  FETCH_PROMISE = \"@BOOKS/promise\",\n  FETCH_BOOKS = \"@BOOKS/fetch\",\n  FETCHING_BOOKS = \"@BOOKS/fetching\",\n}\n\nexport interface IBook {\n  ranking?: number;\n  authors?: string[];\n  length?: number;\n  publisher: string;\n  publicationDate: string;\n  asin: string;\n  isbn10: string;\n  isbn13: string;\n  title?: string;\n  subTitle?: string;\n  poster?: string;\n  overview?: string;\n}\n\nexport interface IAppStore {\n  wrapPromise?: any;\n  books: IBook[];\n  isFetching: boolean;\n}\n\ninterface IAction {\n  type: actionTypes;\n}\n\ninterface IActionPromise extends IAction {\n  payload: any;\n}\n\ninterface IActionFetching extends IAction {\n  payload: boolean;\n}\n\ninterface IActionFetch extends IAction {\n  payload: IBook[];\n}\n\n// TYPE GUARDS\nexport const isPromiseAction = (action: IAction): action is IActionPromise =>\n  action?.type === actionTypes.FETCH_PROMISE;\n\nexport const isFetchingAction = (action: IAction): action is IActionFetching =>\n  action?.type === actionTypes.FETCHING_BOOKS;\n\nexport const isFetchAction = (action: IAction): action is IActionFetch =>\n  action?.type === actionTypes.FETCH_BOOKS;\n","import React, { FunctionComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  createStyles,\n  fade,\n  Theme,\n  withStyles,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { IBook } from \"./ducks/useBooks/types\";\n\ninterface IBooksProps {\n  classes: {\n    row: string;\n    poster: string;\n  };\n  books: IBook[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    row: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    poster: {\n      height: \"180px\",\n      width: \"auto\",\n    },\n  });\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n  arrow: {\n    color: theme.palette.common.black,\n  },\n  tooltip: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nconst BootstrapTooltip = (props: any) => (\n  <Tooltip arrow classes={useStylesBootstrap()} {...props} />\n);\n\nconst Books: FunctionComponent<IBooksProps> = ({ books, classes }) => {\n  return (\n    <div className={classes.row}>\n      {books.map((book, index) => {\n        return (\n          <Link\n            className=\"Book-item\"\n            to={\n              book?.asin || book?.isbn13 || book?.isbn10\n                ? `/book/${book?.asin || book?.isbn13 || book?.isbn10}`\n                : \"\"\n            }\n            key={book?.asin || book?.isbn13 || book?.isbn10 || index}\n          >\n            <BootstrapTooltip title={book?.title || \"\"}>\n              {book?.poster && (\n                <img\n                  className={classes.poster}\n                  alt={book?.title}\n                  src={book.poster}\n                />\n              )}\n            </BootstrapTooltip>\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Books);\n","import React, { FunctionComponent } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Books from \"./Books\";\nimport { IReduxStore } from \"./ducks/reduxStoreType\";\n\nconst Home: FunctionComponent = () => {\n  const wrapedPromise = useSelector(\n    (state: IReduxStore) => state.useBooks.wrapPromise\n  );\n  const resolved = wrapedPromise?.read?.();\n\n  return <Books books={resolved || []} />;\n};\n\nexport default Home;\n","import React, { FunctionComponent } from \"react\";\n\nconst PageNotFound: FunctionComponent = () => {\n  return <div>page not found</div>;\n};\n\nexport default PageNotFound;\n","import React, { FunctionComponent } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport PageNotFound from \"./PageNotFound\";\nimport { IBook } from \"./ducks/useBooks/types\";\nimport { IReduxStore } from \"./ducks/reduxStoreType\";\n\nconst Detail: FunctionComponent = () => {\n  const { bookId } = useParams();\n\n  const wrapedPromise = useSelector(\n    (state: IReduxStore) => state.useBooks.wrapPromise\n  );\n  const resolved = wrapedPromise?.read?.();\n\n  const book: IBook | undefined = resolved?.find?.(\n    (book: IBook) => (book?.asin || book?.isbn13 || book?.isbn10) === bookId\n  );\n\n  return book ? (\n    <article className=\"Book\">\n      <section>\n        {book?.poster && <img alt={book?.title} src={book.poster} />}\n      </section>\n      <div>\n        <header>\n          <h1>{book.title}</h1>\n          <h3>{book.subTitle}</h3>\n          {book?.ranking !== undefined && (\n            <Rating\n              name=\"half-rating-read\"\n              value={book.ranking}\n              precision={0.1}\n              readOnly\n              size=\"large\"\n            />\n          )}\n        </header>\n        <section>\n          {book?.publicationDate && (\n            <span className=\"Pipe\">\n              {new Date(book.publicationDate)?.getFullYear?.()}\n            </span>\n          )}\n          {book?.length && <span className=\"Pipe\">{book.length}</span>}\n          {book?.publisher && <span className=\"Pipe\">{book.publisher}</span>}\n        </section>\n        {book?.overview && (\n          <section>\n            Overview:\n            <div style={{ whiteSpace: \"pre-line\" }}>{book.overview}</div>\n          </section>\n        )}\n      </div>\n    </article>\n  ) : (\n    <PageNotFound />\n  );\n};\n\nexport default Detail;\n","// Suspense integrations like Relay implement\n// a contract like this to integrate with React.\n// Real implementations can be significantly more complex.\n// Don't copy-paste this into your project!\nconst wrapPromise = <T>(promise: Promise<T>) => {\n  let status = \"pending\";\n  let result: T;\n  let suspender = promise.then(\n    (r) => {\n      status = \"success\";\n      result = r;\n    },\n    (e) => {\n      status = \"error\";\n      result = e;\n    }\n  );\n\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      } else if (status === \"success\") {\n        return result;\n      }\n    },\n  };\n};\n\nexport default wrapPromise;\n","import { actionTypes, IBook } from \"./types\";\n\nconst makeBooksPromise = (books: any) => ({\n  type: actionTypes.FETCH_PROMISE,\n  payload: books,\n});\n\nconst makeBooksFetch = (books: IBook[]) => ({\n  type: actionTypes.FETCH_BOOKS,\n  payload: books,\n});\n\nconst makeBooksFetching = (isLoading: boolean) => ({\n  type: actionTypes.FETCHING_BOOKS,\n  payload: isLoading,\n});\n\nexport default {\n  makeBooksPromise,\n  makeBooksFetch,\n  makeBooksFetching,\n};\n","// @ts-nocheck\nimport { Dispatch } from \"redux\";\nimport actions from \"./actions\";\nimport { IBook } from \"./types\";\n\nconst fetchBo = (dispatch: Dispatch) => {\n  dispatch(actions.makeBooksFetching(true));\n\n  Promise.resolve([]).then((response: any) =>\n    dispatch(actions.makeBooksFetch(response || []))\n  );\n};\n\nconst dispatchPromise = (dispatch: Dispatch) => (\n  wrapPromise: (p: Promise<IBook[]>) => any\n) => {\n  dispatch(\n    actions.makeBooksPromise(\n      wrapPromise(\n        new Promise((resolve) =>\n          setTimeout(\n            () =>\n              resolve(\n                fetch(\n                  \"https://sakai-san.github.io/sharedatadifferentroutes/books.json\"\n                ).then((r) => r.json())\n              ),\n            3000\n          )\n        )\n      )\n    )\n  );\n};\n\nexport default { fetchBo, dispatchPromise };\n","import useBooksReducer from \"./reducers\";\nexport { default as useBooksOperations } from \"./operations\";\nexport default useBooksReducer;\n","import { Reducer } from \"redux\";\nimport {\n  IAppStore,\n  isFetchingAction,\n  isFetchAction,\n  isPromiseAction,\n} from \"./types\";\nimport actions from \"./actions\";\n\nconst reducer: Reducer<\n  IAppStore,\n  ReturnType<\n    | typeof actions.makeBooksFetching\n    | typeof actions.makeBooksFetch\n    | typeof actions.makeBooksPromise\n  >\n> = (\n  state = {\n    wrapPromise: null,\n    books: [],\n    isFetching: false,\n  },\n  action\n) => {\n  if (isFetchingAction(action)) {\n    return {\n      ...state,\n      isFetching: action.payload,\n    };\n  } else if (isFetchAction(action)) {\n    return {\n      books: action.payload,\n      isFetching: false,\n    };\n  } else if (isPromiseAction(action)) {\n    return {\n      ...state,\n      wrapPromise: action.payload,\n    };\n  } else {\n    return state;\n  }\n};\n\nexport default reducer;\n","// @ts-nocheck\nimport React, { Suspense, FunctionComponent } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {\n  createStyles,\n  fade,\n  Theme,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport Home from \"./Home\";\nimport Detail from \"./Detail\";\nimport PageNotFound from \"./PageNotFound\";\nimport \"./App.css\";\nimport { useDispatch } from \"react-redux\";\nimport { wrapPromise } from \"./utils\";\nimport { useBooksOperations } from \"./ducks/useBooks\";\n\ninterface IAppProps {\n  classes: {\n    root: string;\n  };\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"90%\",\n      margin: \"0 auto\",\n      marginTtop: \"110px\",\n    },\n  });\n\nconst App: FunctionComponent<IAppProps> = ({ classes }) => {\n  const dispatch = useDispatch();\n\n  useBooksOperations.dispatchPromise(dispatch)(wrapPromise);\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Suspense fallback={<h1>Loading books...</h1>}>\n                <Home />\n              </Suspense>\n            )}\n          />\n          <Route\n            path=\"/book/:bookId\"\n            render={() => (\n              <Suspense fallback={<h1>Loading books...</h1>}>\n                <Detail />\n              </Suspense>\n            )}\n          />\n          <Route component={PageNotFound} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport * as ducks from \"./ducks/index\";\nimport { compose, createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.css\";\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  combineReducers(ducks),\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}